From c001fd6985ed7c2dfb7848139a613ff7b4f7d199 Mon Sep 17 00:00:00 2001
From: skongkonga <3139771198@qq.com>
Date: Fri, 18 Oct 2024 12:06:44 +0800
Subject: [PATCH] feat: let PacketPlayOutKeepAlive enable to retry


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 59d526329..8fe2fd50e 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -104,6 +104,8 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
     private AutoRecipe H = new AutoRecipe();
     private static final long KEEPALIVE_LIMIT = Long.getLong("paper.playerconnection.keepalive", 30) * 1000; // Paper - provide property to set keepalive limit
 
+    private int alive_retries = 0;
+
     public PlayerConnection(MinecraftServer minecraftserver, NetworkManager networkmanager, EntityPlayer entityplayer) {
         this.minecraftServer = minecraftserver;
         this.networkManager = networkmanager;
@@ -192,6 +194,12 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                 PlayerConnection.LOGGER.warn("{} was kicked due to keepalive timeout!", this.player.getName()); // more info
                 this.disconnect(new ChatMessage("disconnect.timeout"));
             }
+            if (elapsedTime >= 15000L && alive_retries < 1) { // 15 seconds
+                if (alive_retries % 10 == 0) {
+                    this.sendPacket(new PacketPlayOutKeepAlive(this.getKeepAliveID()));
+                }
+                alive_retries += 1;
+            }
         } else {
             if (elapsedTime >= 15000L) { // 15 seconds
                 this.setPendingPing(true);
@@ -2267,6 +2275,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
     }
 
     public void a(PacketPlayInKeepAlive packetplayinkeepalive) {
+        alive_retries = 0;
         //PlayerConnectionUtils.ensureMainThread(packetplayinkeepalive, this, this.player.x()); // CraftBukkit // Paper - This shouldn't be on the main thread
         if (this.g && packetplayinkeepalive.a() == this.h) {
             int i = (int) (this.d() - this.f);
-- 
2.42.0.windows.2

